<?xml version="1.0"?>
<project name="Spacewar" basedir=".">
  <description>
  	Ant build file for compiling Spacewar, generating documentation, running
  	example code, running independently developed client code, and setting up 
    and launching ladder runs.
  </description>

  <!-- src: root directory for the main Spacewar codebase. -->
  <property name="src" value="src" />

  <!-- build: staging directory for any files generated by the build. -->
  <property name="build" value="build" />

  <!-- lib: directory for third party jars shipped with the project. -->
  <property name="lib" value="lib" />

  <!-- dist: target directory for generated distributables. -->
  <property name="dist" value="dist" />
  
  <!-- docs: directory containing the project's javadocs -->
  <property name="docs" value="docs/api" />
  
  <!-- clean: blow away any and all generated files. -->
  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${dist}" />
    <delete dir="${docs}" />
  </target>
  
  <!-- init: the first step of any build. -->
  <target name="init">
    <tstamp />
    <mkdir dir="${build}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${docs}" />
  </target>
  
  <!-- Make 3rd-party libs accessible to tasks. -->
  <path id="lib.classpath">
    <fileset dir="${lib}" includes="*.jar" />
  </path>

  
  <!-- The Spacewar project can be divided into separate standalone modules.
  	   In order to make this explicit, targets are provided for defining the
  	   dependencies, building, and packaging each module independently. -->
  

  <!-- mlfw
  
       The core of Spacewar is the Machine Learning Framework, referred to 
       as mlfw.  The mlfw is more general than just spacewar; it simply 
       provides a set of interfaces that could be implemented for any simulator
       engine wanting to take advantage of the mlfw's provided functionality.  
  -->    

  <target name="compile-mlfw" depends="init">
    <javac srcdir="${src}"
           destdir="${build}"
           includes="edu/ou/mlfw/**"
           source="1.5">
      <classpath refid="lib.classpath" />
    </javac>
  </target>
  
  <target name="jar-mlfw" depends="compile-mlfw">
    <jar destfile="${dist}/mlfw.jar"
         basedir="${build}" 
         includes="edu/ou/mlfw/**" />
  </target>
  
  <!-- end mlfw -->
  
  
  <!-- spacewar
  
       The spacewar simulator builds on top of the mlfw.  It provides the 
       physics, graphics, and gameplay of Spacewar. 
  --> 
  
  <target name="compile-spacewar" depends="init">
    <javac srcdir="${src}"
           destdir="${build}"
           debug="on"
           debuglevel="lines,vars,source">
      <classpath refid="lib.classpath" /> 
      <compilerarg value="-Xlint" />
    </javac>
    <copy file="${src}/log4j.properties" todir="${build}" />
  </target> 

  <target name="jar-spacewar" depends="compile-spacewar">
    <!-- For whatever stupid reason, you can't include and reference jars 
         within a jar, so we first have to extract our library dependencies, 
         and then jar up everything together. --> 
    <unzip dest="${build}">
      <fileset dir=".">
        <include name="${lib}/*.jar" />
      </fileset>
    </unzip>
    <delete>
      <fileset dir="${build}/META-INF" />
    </delete>
    <jar destfile="${dist}/spacewar.jar" basedir="${build}" >
      <manifest>
        <attribute name="Main-class" value="edu.ou.mlfw.World" />
      </manifest>
    </jar>
  </target>
  
  <!-- end spacewar -->
  
  <!-- Examples -->

  <target name="hello" depends="jar-spacewar">
    <javac srcdir="examples/hello" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.World"
	      fork="true" 
	      dir="examples/hello">
	  <arg value="-g" />
	  <classpath>
	  	<pathelement location="${dist}/spacewar.jar"/>
	    <pathelement path="examples/hello" />
	  </classpath>
	</java>
  </target>
	
  <target name="random" depends="jar-spacewar">
    <javac srcdir="examples/random" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.World"
		  fork="true" 
		  dir="examples/random">
      <arg value="-g" />
	  <classpath>
		<pathelement location="${dist}/spacewar.jar"/>
		<pathelement path="examples/random"/>
	  </classpath>
	</java>
  </target>
	
  <target name="project 1" depends="jar-spacewar">
	<javac srcdir="examples/project1" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.World"
	      fork="true" 
	      dir="examples/project1">
	  <arg value="-g" />
	  <classpath>
	  	<pathelement location="${dist}/spacewar.jar"/>
	    <pathelement path="examples/project1"/>
	  </classpath>
	</java>
  </target>
	
  <target name="project 2" depends="jar-spacewar">
	<javac srcdir="examples/project2" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.World"
	      fork="true" 
	      dir="examples/project2">
	  <arg value="-g" />
	  <classpath>
	  	<pathelement location="${dist}/spacewar.jar"/>
	    <pathelement path="examples/project2"/>
	  </classpath>
	</java>
  </target>

  <target name="project 2 ladder" depends="jar-spacewar">
	<javac srcdir="examples/project2" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.ladder.Ladder"
	      fork="true" 
	      dir="examples/project2">
	  <classpath>
	  	<pathelement location="${dist}/spacewar.jar"/>
	    <pathelement path="examples/project2"/>
	  </classpath>
	</java>
  </target>

  <target name="project 2 ladder gui" depends="jar-spacewar">
	<javac srcdir="examples/project2" classpath="${dist}/spacewar.jar" />
	<java classname="edu.ou.mlfw.ladder.Ladder"
	      fork="true" 
	      dir="examples/project2">
		<arg value="-g" />
	  <classpath>
	  	<pathelement location="${dist}/spacewar.jar"/>
	    <pathelement path="examples/project2"/>
	  </classpath>
	</java>
  </target>

  <target name="doc" depends="init">
    <javadoc destdir="{docs}/api"
             author="true"
             version="true"
             use="true"
             windowtitle="Machine Learning Framework / Spacewar! API">
      <packageset dir="src" defaultexcludes="yes">
        <include name="edu/**" />
      </packageset>
      <doctitle>
        <![CDATA[<h1>Machine Learning Framework / Spacewar! API</h1>]]>
      </doctitle>
      <bottom>
        <![CDATA[<i>Copyright &#169; 2007 University of Oklahoma. All Rights Reserved.</i>]]>
      </bottom>
      <tag name="todo" scope="all" description="To do:" />
      <group title="Machine Learning Framework Packages" packages="edu.ou.mlfw*" />
      <group title="Spacewar! Packages" packages="edu.ou.spacewar*" />
      <group title="Utilities Packages" packages="edu.ou.utils*" />
    </javadoc>
  </target>

</project>

